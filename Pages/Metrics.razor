@page "/Metrics"
@inject TelemetryResults telemetryResults
@inject MetricsPageState state

<PageTitle>Metrics</PageTitle>

<h1>Metrics</h1>

@foreach (var service in telemetryResults.ServiceMetrics.Values)
{
    <div class="ServiceTitleBlock">
        <h2>@service.ServiceName</h2>
        <div class="ServiceDescription">@service.ServiceDescription</div>
    </div>
    <div class="ServiceContents">
        @foreach (var m in service.Meters.Values)
        {
            <div class="MeterBlock">
                <h3>@m.MeterName</h3>
                @foreach (var cnt in m.Counters.Values)
                {
                    <div class="CounterBlock">
                        <h4 class="CounterName">@cnt.CounterName</h4>
                        <div class="CounterDetails">
                            <span>@cnt.CounterDescription</span>
                            <span>@cnt.CounterUnit</span>
                        </div>
                        <div class="CounterContents">
                        @foreach (var Dimension in cnt.Dimensions.Values)
                        {
                            <DimensionedCounterView Dimension="@Dimension" />
                        }
                        </div>
                    </div>
                }
            </div>
        }
        <div>
        </div>
    </div>
}

@code {

    protected override void OnInitialized()
    {
        state.SetPage(this);
    }


    public void Update()
    {
        InvokeAsync(() => StateHasChanged());
    }
}
